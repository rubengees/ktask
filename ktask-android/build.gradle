apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven-publish'

group = 'com.github.rubengees'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.version
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile deps.kotlinStdlib
    compile deps.supportFragment

    compile project(':ktask')
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = file("$buildDir/javadoc")
    sourceDirs = files('src/main/kotlin')
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    from file("$buildDir/javadoc")
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact bundleRelease

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.compile.allDependencies.each {
                    if (it.group != null && (it.name != null || it.name == "unspecified") && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')

                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
